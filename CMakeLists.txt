cmake_minimum_required(VERSION 3.25)
project(AmpleOS CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set(CMAKE_SYSTEM_NAME AmpleOS)
set(CMAKE_SYSTEM_PROCESSOR ${AMPLEOS_PROCESSOR})

set(CMAKE_SYSROOT ${CMAKE_BINARY_DIR}/Sysroot)
set(CMAKE_STAGING_PREFIX ${CMAKE_SYSROOT})

SET(TOOLCHAIN_TARGET ${AMPLEOS_ARCHITECTURE}-ampleos-linux-gnu)
set(TOOLCHAIN ${TOOLCHAIN_PATH}/Cross/bin/${TOOLCHAIN_TARGET})

set(CMAKE_C_COMPILER ${TOOLCHAIN}-gcc)
set(CMAKE_CXX_COMPILER ${TOOLCHAIN}-g++)
set(CMAKE_ASM_COMPILER ${TOOLCHAIN}-gcc)
set(CMAKE_LINKER ${TOOLCHAIN}-ld)
set(CMAKE_AR ${TOOLCHAIN}-gcc-ar)
set(CMAKE_NM ${TOOLCHAIN}-gcc-nm)
set(CMAKE_OBJCOPY ${TOOLCHAIN}-objcopy)
set(CMAKE_RANLIB ${TOOLCHAIN}-gcc-ranlib)
set(CMAKE_STRIP ${TOOLCHAIN}-strip)

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

add_custom_target(toolchain
    COMMAND "ARCH=${AMPLEOS_ARCHITECTURE}" "TARGET=${TOOLCHAIN_TARGET}" "TARGET_DIR=${TOOLCHAIN_PATH}" 
        "SOURCE_DIR=${CMAKE_SOURCE_DIR}" "SYSROOT_DIR=${CMAKE_SYSROOT}" ${CMAKE_SOURCE_DIR}/Meta/Scripts/SetupToolchain.sh
    USES_TERMINAL)

function(ampleos_bin name)
    add_executable(${name} ${SOURCES})
    install(TARGETS ${name} RUNTIME DESTINATION bin)
endfunction()

include_directories(.)

add_subdirectory(Services)
